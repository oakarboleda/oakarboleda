/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three';
import React, { useEffect, useRef } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Icosphere: THREE.Mesh;
    Icosphere_1: THREE.Mesh;
    Moon: THREE.Mesh;
    Icosphere004: THREE.Mesh;
    Icosphere004_1: THREE.Mesh;
    Icosphere002: THREE.Mesh;
    Icosphere002_1: THREE.Mesh;
    Icosphere002_2: THREE.Mesh;
    Icosphere005: THREE.Mesh;
    Icosphere005_1: THREE.Mesh;
    Icosphere006: THREE.Mesh;
    Icosphere006_1: THREE.Mesh;
    Icosphere009: THREE.Mesh;
    Icosphere009_1: THREE.Mesh;
    Icosphere009_2: THREE.Mesh;
    Icosphere010: THREE.Mesh;
    Icosphere010_1: THREE.Mesh;
    Icosphere010_2: THREE.Mesh;
    Sun: THREE.Mesh;
    Icosphere007: THREE.Mesh;
    Icosphere007_1: THREE.Mesh;
    Circle: THREE.Mesh;
    Circle_1: THREE.Mesh;
    Space: THREE.Mesh;
  };
  materials: {
    PaletteMaterial002: THREE.MeshStandardMaterial;
    PaletteMaterial003: THREE.MeshStandardMaterial;
    PaletteMaterial001: THREE.MeshStandardMaterial;
    PaletteMaterial004: THREE.MeshStandardMaterial;
    PaletteMaterial005: THREE.MeshStandardMaterial;
  };
};

type ActionName =
  | 'EarthAction'
  | 'MoonAction.001'
  | 'VenusAction.001'
  | 'MarsAction'
  | 'MercuryAction'
  | 'JupiterAction'
  | 'uranusAction'
  | 'NeptuneAction.001'
  | 'SunAction'
  | 'Key.001Action'
  | 'SaturnAction'
  | 'SaturnsRingsAction';
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group | null>(null);
  const { nodes, materials, animations } = useGLTF(
    '/Space-transformed.glb',
  ) as GLTFResult;
  const { actions } = useAnimations<THREE.AnimationClip>(animations, group);
  useEffect(() => {
    if (actions['EarthAction']?.play()) {
      actions['EarthAction'].play().timeScale = 0.2;
    }
    if (actions['MoonAction.001']?.play()) {
      actions['MoonAction.001'].play().timeScale = 0.3;
    }
    if (actions['VenusAction.001']?.play()) {
      actions['VenusAction.001'].play().timeScale = 0.2;
    }
    if (actions['MarsAction']?.play()) {
      actions['MarsAction'].play().timeScale = 0.2;
    }
    if (actions['MercuryAction']?.play()) {
      actions['MercuryAction'].play().timeScale = 0.2;
    }
    if (actions['JupiterAction']?.play()) {
      actions['JupiterAction'].play().timeScale = 0.2;
    }
    if (actions['uranusAction']?.play()) {
      actions['uranusAction'].play().timeScale = 0.2;
    }
    if (actions['NeptuneAction.001']?.play()) {
      actions['NeptuneAction.001'].play().timeScale = 0.2;
    }
    if (actions['SunAction']?.play()) {
      actions['SunAction'].play().timeScale = 0.2;
    }
    if (actions['Key.001Action']?.play()) {
      actions['Key.001Action'].play().timeScale = 0.2;
    }
    if (actions['SaturnAction']?.play()) {
      actions['SaturnAction'].play().timeScale = 0.2;
    }
    if (actions['SaturnsRingsAction']?.play()) {
      actions['SaturnsRingsAction'].play().timeScale = 0.2;
    }
  }, [actions]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group
          name="Earth"
          rotation={[-Math.PI, 0.854, -Math.PI]}
          userData={{ name: 'Earth' }}
        >
          <mesh
            name="Icosphere"
            castShadow
            receiveShadow
            geometry={nodes.Icosphere.geometry}
            material={materials.PaletteMaterial002}
          />
          <mesh
            name="Icosphere_1"
            castShadow
            receiveShadow
            geometry={nodes.Icosphere_1.geometry}
            material={materials.PaletteMaterial003}
          />
          <mesh
            name="Moon"
            castShadow
            receiveShadow
            geometry={nodes.Moon.geometry}
            material={materials.PaletteMaterial001}
            position={[16.025, -0.006, 0.031]}
            rotation={[0, -1.497, 0]}
            userData={{ name: 'Moon' }}
          />
        </group>
        <group
          name="Venus"
          rotation={[-Math.PI, 0.411, -Math.PI]}
          userData={{ name: 'Venus' }}
        >
          <mesh
            name="Icosphere004"
            castShadow
            receiveShadow
            geometry={nodes.Icosphere004.geometry}
            material={materials.PaletteMaterial002}
          />
          <mesh
            name="Icosphere004_1"
            castShadow
            receiveShadow
            geometry={nodes.Icosphere004_1.geometry}
            material={materials.PaletteMaterial003}
          />
        </group>
        <group name="Mars" rotation={[0, 0.924, 0]} userData={{ name: 'Mars' }}>
          <mesh
            name="Icosphere002"
            castShadow
            receiveShadow
            geometry={nodes.Icosphere002.geometry}
            material={materials.PaletteMaterial002}
          />
          <mesh
            name="Icosphere002_1"
            castShadow
            receiveShadow
            geometry={nodes.Icosphere002_1.geometry}
            material={materials.PaletteMaterial002}
          />
          <mesh
            name="Icosphere002_2"
            castShadow
            receiveShadow
            geometry={nodes.Icosphere002_2.geometry}
            material={materials.PaletteMaterial002}
          />
        </group>
        <group
          name="Mercury"
          rotation={[0, -0.763, 0]}
          userData={{ name: 'Mercury' }}
        >
          <mesh
            name="Icosphere005"
            castShadow
            receiveShadow
            geometry={nodes.Icosphere005.geometry}
            material={materials.PaletteMaterial002}
          />
          <mesh
            name="Icosphere005_1"
            castShadow
            receiveShadow
            geometry={nodes.Icosphere005_1.geometry}
            material={materials.PaletteMaterial002}
          />
        </group>
        <group
          name="Jupiter"
          rotation={[0, -0.886, 0]}
          userData={{ name: 'Jupiter' }}
        >
          <mesh
            name="Icosphere006"
            castShadow
            receiveShadow
            geometry={nodes.Icosphere006.geometry}
            material={materials.PaletteMaterial002}
          />
          <mesh
            name="Icosphere006_1"
            castShadow
            receiveShadow
            geometry={nodes.Icosphere006_1.geometry}
            material={materials.PaletteMaterial003}
          />
        </group>
        <group
          name="uranus"
          rotation={[0, 0.268, 0]}
          userData={{ name: 'uranus' }}
        >
          <mesh
            name="Icosphere009"
            castShadow
            receiveShadow
            geometry={nodes.Icosphere009.geometry}
            material={materials.PaletteMaterial002}
          />
          <mesh
            name="Icosphere009_1"
            castShadow
            receiveShadow
            geometry={nodes.Icosphere009_1.geometry}
            material={materials.PaletteMaterial002}
          />
          <mesh
            name="Icosphere009_2"
            castShadow
            receiveShadow
            geometry={nodes.Icosphere009_2.geometry}
            material={materials.PaletteMaterial002}
          />
        </group>
        <group
          name="Neptune"
          rotation={[0, 0.14, 0]}
          userData={{ name: 'Neptune' }}
        >
          <mesh
            name="Icosphere010"
            castShadow
            receiveShadow
            geometry={nodes.Icosphere010.geometry}
            material={materials.PaletteMaterial002}
          />
          <mesh
            name="Icosphere010_1"
            castShadow
            receiveShadow
            geometry={nodes.Icosphere010_1.geometry}
            material={materials.PaletteMaterial003}
          />
          <mesh
            name="Icosphere010_2"
            castShadow
            receiveShadow
            geometry={nodes.Icosphere010_2.geometry}
            material={materials.PaletteMaterial003}
          />
        </group>
        <mesh
          name="Sun"
          castShadow
          receiveShadow
          geometry={nodes.Sun.geometry}
          material={materials.PaletteMaterial004}
          rotation={[-0.104, 0.127, -0.582]}
          userData={{ name: 'Sun' }}
        />
        <group
          name="Saturn"
          rotation={[Math.PI, -1.308, Math.PI]}
          userData={{ name: 'Saturn' }}
        >
          <mesh
            name="Icosphere007"
            castShadow
            receiveShadow
            geometry={nodes.Icosphere007.geometry}
            material={materials.PaletteMaterial002}
            morphTargetDictionary={nodes.Icosphere007.morphTargetDictionary}
            morphTargetInfluences={nodes.Icosphere007.morphTargetInfluences}
            userData={{ targetNames: ['Rotation'] }}
          />
          <mesh
            name="Icosphere007_1"
            castShadow
            receiveShadow
            geometry={nodes.Icosphere007_1.geometry}
            material={materials.PaletteMaterial002}
            morphTargetDictionary={nodes.Icosphere007_1.morphTargetDictionary}
            morphTargetInfluences={nodes.Icosphere007_1.morphTargetInfluences}
            userData={{ targetNames: ['Rotation'] }}
          />
          <group
            name="SaturnsRings"
            position={[33.313, 0.429, 0.001]}
            rotation={[0.101, -0.008, -1.097]}
            userData={{ name: 'SaturnsRings' }}
          >
            <mesh
              name="Circle"
              castShadow
              receiveShadow
              geometry={nodes.Circle.geometry}
              material={materials.PaletteMaterial002}
              morphTargetDictionary={nodes.Circle.morphTargetDictionary}
              morphTargetInfluences={nodes.Circle.morphTargetInfluences}
              userData={{ targetNames: ['Rotation'] }}
            />
            <mesh
              name="Circle_1"
              castShadow
              receiveShadow
              geometry={nodes.Circle_1.geometry}
              material={materials.PaletteMaterial002}
              morphTargetDictionary={nodes.Circle_1.morphTargetDictionary}
              morphTargetInfluences={nodes.Circle_1.morphTargetInfluences}
              userData={{ targetNames: ['Rotation'] }}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/Space-transformed.glb');
